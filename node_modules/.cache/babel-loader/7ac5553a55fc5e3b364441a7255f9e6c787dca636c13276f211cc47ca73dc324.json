{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gaurav\\\\My_Programs\\\\PhotoClick\\\\newfrontend\\\\src\\\\SendToBackend.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { getStorage, ref, listAll, getDownloadURL } from 'firebase/storage';\nimport { app } from \"./firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SendToBackend() {\n  _s();\n  const [imageList, setImageList] = useState([]);\n  const [inputArray, setInputArray] = useState([]);\n  const [responseMessage, setResponseMessage] = useState('');\n\n  // Function to send array to backend\n  const sendArrayToBackend = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/api/data', {\n        array: inputArray\n      });\n      setResponseMessage(response.data.success ? 'Array sent successfully' : 'Error sending array');\n    } catch (error) {\n      console.error('Error sending array:', error);\n      setResponseMessage('Error sending array');\n    }\n  };\n  const getURLs = () => {\n    // Reference to the Firebase Storage bucket\n    const storage = getStorage(app);\n    const storageRef = ref(storage);\n\n    // List all items in the Storage bucket\n    listAll(storageRef).then(result => {\n      const images = result.items.map(item => {\n        // Get the download URL for each image\n        console.log(\"Item: \", item);\n        return getDownloadURL(item);\n      });\n\n      // Update the state with the list of image URLs\n      Promise.all(images).then(urls => {\n        console.log(\"URL: \", urls);\n        setImageList(urls);\n      });\n    }).catch(error => {\n      console.error('Error listing images:', error);\n    });\n  };\n  useEffect(() => {\n    getURLs();\n    sendArrayToBackend();\n  }, []);\n\n  // useEffect to send array to backend on page load\n  useEffect(() => {}, []); // Empty dependency array ensures this effect runs once on mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"React-Node Array Communication\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Enter array elements (comma-separated):\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: inputArray.join(','),\n          onChange: e => setInputArray(e.target.value.split(','))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendArrayToBackend,\n      children: \"Send Array to Backend\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Response from Backend: \", responseMessage]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(SendToBackend, \"Wl17XDGx/kMzYA+zkORN3Oy2RLI=\");\n_c = SendToBackend;\nexport default SendToBackend;\nvar _c;\n$RefreshReg$(_c, \"SendToBackend\");","map":{"version":3,"names":["React","useState","useEffect","axios","getStorage","ref","listAll","getDownloadURL","app","jsxDEV","_jsxDEV","SendToBackend","_s","imageList","setImageList","inputArray","setInputArray","responseMessage","setResponseMessage","sendArrayToBackend","response","post","array","data","success","error","console","getURLs","storage","storageRef","then","result","images","items","map","item","log","Promise","all","urls","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","join","onChange","e","target","split","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Gaurav/My_Programs/PhotoClick/newfrontend/src/SendToBackend.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { getStorage, ref, listAll, getDownloadURL } from 'firebase/storage';\r\nimport { app } from \"./firebase\";\r\n\r\nfunction SendToBackend() {\r\n  const [imageList, setImageList] = useState([]);\r\n  const [inputArray, setInputArray] = useState([]);\r\n  const [responseMessage, setResponseMessage] = useState('');\r\n\r\n  // Function to send array to backend\r\n  const sendArrayToBackend = async () => {\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/data', { array: inputArray });\r\n      setResponseMessage(response.data.success ? 'Array sent successfully' : 'Error sending array');\r\n    } catch (error) {\r\n      console.error('Error sending array:', error);\r\n      setResponseMessage('Error sending array');\r\n    }\r\n  };\r\n\r\n  const getURLs = () => {\r\n    // Reference to the Firebase Storage bucket\r\n    const storage = getStorage(app);\r\n    const storageRef = ref(storage);\r\n\r\n    // List all items in the Storage bucket\r\n    listAll(storageRef)\r\n      .then((result) => {\r\n        const images = result.items.map((item) => {\r\n          // Get the download URL for each image\r\n          console.log(\"Item: \", item);\r\n          return getDownloadURL(item);\r\n        });\r\n\r\n        // Update the state with the list of image URLs\r\n        Promise.all(images).then((urls) => {\r\n          console.log(\"URL: \", urls);\r\n          setImageList(urls);\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error listing images:', error);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    getURLs();\r\n    sendArrayToBackend();\r\n  }, []);\r\n\r\n\r\n  // useEffect to send array to backend on page load\r\n  useEffect(() => {\r\n    \r\n  }, []); // Empty dependency array ensures this effect runs once on mount\r\n\r\n  return (\r\n    <div>\r\n      <h1>React-Node Array Communication</h1>\r\n      <div>\r\n        <label>\r\n          Enter array elements (comma-separated):\r\n          <input\r\n            type=\"text\"\r\n            value={inputArray.join(',')}\r\n            onChange={(e) => setInputArray(e.target.value.split(','))}\r\n          />\r\n        </label>\r\n      </div>\r\n      <button onClick={sendArrayToBackend}>Send Array to Backend</button>\r\n      <div>\r\n        <p>Response from Backend: {responseMessage}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SendToBackend;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}