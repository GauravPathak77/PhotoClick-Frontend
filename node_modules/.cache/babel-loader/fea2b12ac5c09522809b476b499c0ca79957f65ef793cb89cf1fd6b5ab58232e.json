{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gaurav\\\\My_Programs\\\\PhotoClick\\\\newfrontend\\\\src\\\\SendToBackend.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { getStorage, ref, listAll, getDownloadURL } from 'firebase/storage';\nimport { app } from \"./firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SendToBackend() {\n  _s();\n  const [imageList, setImageList] = useState([]);\n  const [inputArray, setInputArray] = useState([]);\n  const [responseMessage, setResponseMessage] = useState('');\n\n  // Function to send array to backend\n  const sendArrayToBackend = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/api/data', {\n        array: inputArray\n      });\n      setResponseMessage(response.data.success ? 'Array sent successfully' : 'Error sending array');\n    } catch (error) {\n      console.error('Error sending array:', error);\n      setResponseMessage('Error sending array');\n    }\n  };\n  const getURLs = () => {};\n  useEffect(() => {\n    getU;\n  }, []);\n\n  // useEffect to send array to backend on page load\n  useEffect(() => {\n    sendArrayToBackend();\n  }, []); // Empty dependency array ensures this effect runs once on mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"React-Node Array Communication\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Enter array elements (comma-separated):\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: inputArray.join(','),\n          onChange: e => setInputArray(e.target.value.split(','))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendArrayToBackend,\n      children: \"Send Array to Backend\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Response from Backend: \", responseMessage]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(SendToBackend, \"Wl17XDGx/kMzYA+zkORN3Oy2RLI=\");\n_c = SendToBackend;\nexport default SendToBackend;\nvar _c;\n$RefreshReg$(_c, \"SendToBackend\");","map":{"version":3,"names":["React","useState","useEffect","axios","getStorage","ref","listAll","getDownloadURL","app","jsxDEV","_jsxDEV","SendToBackend","_s","imageList","setImageList","inputArray","setInputArray","responseMessage","setResponseMessage","sendArrayToBackend","response","post","array","data","success","error","console","getURLs","getU","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","join","onChange","e","target","split","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Gaurav/My_Programs/PhotoClick/newfrontend/src/SendToBackend.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { getStorage, ref, listAll, getDownloadURL } from 'firebase/storage';\r\nimport { app } from \"./firebase\";\r\n\r\nfunction SendToBackend() {\r\n  const [imageList, setImageList] = useState([]);\r\n  const [inputArray, setInputArray] = useState([]);\r\n  const [responseMessage, setResponseMessage] = useState('');\r\n\r\n  // Function to send array to backend\r\n  const sendArrayToBackend = async () => {\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/data', { array: inputArray });\r\n      setResponseMessage(response.data.success ? 'Array sent successfully' : 'Error sending array');\r\n    } catch (error) {\r\n      console.error('Error sending array:', error);\r\n      setResponseMessage('Error sending array');\r\n    }\r\n  };\r\n\r\n  const getURLs = () => {}\r\n\r\n  useEffect(() => {\r\n    getU\r\n  }, []);\r\n\r\n\r\n  // useEffect to send array to backend on page load\r\n  useEffect(() => {\r\n    sendArrayToBackend();\r\n  }, []); // Empty dependency array ensures this effect runs once on mount\r\n\r\n  return (\r\n    <div>\r\n      <h1>React-Node Array Communication</h1>\r\n      <div>\r\n        <label>\r\n          Enter array elements (comma-separated):\r\n          <input\r\n            type=\"text\"\r\n            value={inputArray.join(',')}\r\n            onChange={(e) => setInputArray(e.target.value.split(','))}\r\n          />\r\n        </label>\r\n      </div>\r\n      <button onClick={sendArrayToBackend}>Send Array to Backend</button>\r\n      <div>\r\n        <p>Response from Backend: {responseMessage}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SendToBackend;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}