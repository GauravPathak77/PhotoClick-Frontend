{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gaurav\\\\My_Programs\\\\PhotoClick\\\\PhotoClickFrontend\\\\src\\\\Verify.js\",\n  _s = $RefreshSig$();\n// Verify.js\nimport React, { useState } from 'react';\nimport AppData from './AppData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Verify = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n  const [isFormSubmitted, setIsFormSubmitted] = useState(false);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const {\n      email,\n      password\n    } = formData;\n\n    // Replace the following condition with your actual authentication logic\n    if (email === 'xyz@gmail.com' && password === '123456') {\n      setIsFormSubmitted(true);\n    } else {\n      alert();\n      console.log('error');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isFormSubmitted ? /*#__PURE__*/_jsxDEV(AppData, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            value: formData.email,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            value: formData.password,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"form-button\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(Verify, \"f0KlG8A58zd2XygHB3F7wZFS7kE=\");\n_c = Verify;\nexport default Verify;\nvar _c;\n$RefreshReg$(_c, \"Verify\");","map":{"version":3,"names":["React","useState","AppData","jsxDEV","_jsxDEV","Verify","_s","formData","setFormData","email","password","isFormSubmitted","setIsFormSubmitted","handleChange","e","name","value","target","prevData","handleSubmit","preventDefault","alert","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","type","onChange","required","_c","$RefreshReg$"],"sources":["C:/Users/Gaurav/My_Programs/PhotoClick/PhotoClickFrontend/src/Verify.js"],"sourcesContent":["// Verify.js\r\nimport React, { useState } from 'react';\r\nimport AppData from './AppData';\r\n\r\nconst Verify = () => {\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n  const [isFormSubmitted, setIsFormSubmitted] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { email, password } = formData;\r\n\r\n    // Replace the following condition with your actual authentication logic\r\n    if (email === 'xyz@gmail.com' && password === '123456') {\r\n      setIsFormSubmitted(true);\r\n    } else {\r\n      alert()\r\n      console.log('error');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {isFormSubmitted ? (\r\n        <AppData />\r\n      ) : (\r\n    <div className=\"form-container\">\r\n        <form onSubmit={handleSubmit}>\r\n          <label>\r\n            Email:\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={formData.email}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </label>\r\n          <label>\r\n            Password:\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={formData.password}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </label>\r\n          <button className=\"form-button\" type=\"submit\">\r\n            Submit\r\n          </button>\r\n        </form>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Verify;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}