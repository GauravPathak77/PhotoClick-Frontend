{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gaurav\\\\My_Programs\\\\PhotoClick\\\\newfrontend\\\\src\\\\SendToBackend.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { getStorage, ref, listAll, getDownloadURL } from 'firebase/storage';\nimport { app } from \"./firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SendToBackend() {\n  _s();\n  const [imageList, setImageList] = useState([]);\n  const [inputArray, setInputArray] = useState([]);\n  const [responseMessage, setResponseMessage] = useState('');\n\n  // Function to send array to backend\n  const sendArrayToBackend = async urls => {\n    try {\n      console.log(\"Array: \", urls);\n      const response = await axios.post('http://localhost:5000/api/data', {\n        array: urls\n      });\n      setResponseMessage(response.data.success ? 'Array sent successfully' : 'Error sending array');\n    } catch (error) {\n      console.error('Error sending array:', error);\n      setResponseMessage('Error sending array');\n    }\n  };\n  const getURLs = async () => {\n    // Reference to the Firebase Storage bucket\n    const storage = getStorage(app);\n    const storageRef = ref(storage);\n\n    // List all items in the Storage bucket\n    listAll(storageRef).then(result => {\n      const images = result.items.map(item => {\n        // Get the download URL for each image\n        console.log(\"Item: \", item);\n        return getDownloadURL(item);\n      });\n\n      // Update the state with the list of image URLs\n      Promise.all(images).then(urls => {\n        console.log(\"URL: \", urls);\n        setImageList(urls);\n        // Call sendArrayToBackend after updating imageList\n        sendArrayToBackend(urls);\n      });\n    }).catch(error => {\n      console.error('Error listing images:', error);\n    });\n  };\n  useEffect(() => {\n    getURLs();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(SendToBackend, \"eoyM8vtWvyL9AR1jCi5dWXG3I2g=\");\n_c = SendToBackend;\nexport default SendToBackend;\nvar _c;\n$RefreshReg$(_c, \"SendToBackend\");","map":{"version":3,"names":["React","useState","useEffect","axios","getStorage","ref","listAll","getDownloadURL","app","jsxDEV","_jsxDEV","SendToBackend","_s","imageList","setImageList","inputArray","setInputArray","responseMessage","setResponseMessage","sendArrayToBackend","urls","console","log","response","post","array","data","success","error","getURLs","storage","storageRef","then","result","images","items","map","item","Promise","all","catch","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Gaurav/My_Programs/PhotoClick/newfrontend/src/SendToBackend.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { getStorage, ref, listAll, getDownloadURL } from 'firebase/storage';\r\nimport { app } from \"./firebase\";\r\n\r\nfunction SendToBackend() {\r\n  const [imageList, setImageList] = useState([]);\r\n  const [inputArray, setInputArray] = useState([]);\r\n  const [responseMessage, setResponseMessage] = useState('');\r\n\r\n  // Function to send array to backend\r\n  const sendArrayToBackend = async (urls) => {\r\n    try {\r\n      console.log(\"Array: \", urls);\r\n      const response = await axios.post('http://localhost:5000/api/data', { array: urls });\r\n      setResponseMessage(response.data.success ? 'Array sent successfully' : 'Error sending array');\r\n    } catch (error) {\r\n      console.error('Error sending array:', error);\r\n      setResponseMessage('Error sending array');\r\n    }\r\n  };\r\n\r\n  const getURLs = async () => {\r\n    // Reference to the Firebase Storage bucket\r\n    const storage = getStorage(app);\r\n    const storageRef = ref(storage);\r\n\r\n    // List all items in the Storage bucket\r\n    listAll(storageRef)\r\n      .then((result) => {\r\n        const images = result.items.map((item) => {\r\n          // Get the download URL for each image\r\n          console.log(\"Item: \", item);\r\n          return getDownloadURL(item);\r\n        });\r\n\r\n        // Update the state with the list of image URLs\r\n        Promise.all(images).then((urls) => {\r\n          console.log(\"URL: \", urls);\r\n          setImageList(urls);\r\n          // Call sendArrayToBackend after updating imageList\r\n          sendArrayToBackend(urls); \r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error listing images:', error);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    getURLs();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {/* <h1>React-Node Array Communication</h1>\r\n      <div>\r\n        <label>\r\n          Enter array elements (comma-separated):\r\n          <input\r\n            type=\"text\"\r\n            value={inputArray.join(',')}\r\n            onChange={(e) => setInputArray(e.target.value.split(','))}\r\n          />\r\n          {console.log(\"ImageList: \", imageList)}\r\n        </label>\r\n      </div>\r\n      <button onClick={sendArrayToBackend}>Send Array to Backend</button>\r\n      <div>\r\n        <p>Response from Backend: {responseMessage}</p>\r\n      </div> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SendToBackend;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,EAAEC,GAAG,EAAEC,OAAO,EAAEC,cAAc,QAAQ,kBAAkB;AAC3E,SAASC,GAAG,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACgB,eAAe,EAAEC,kBAAkB,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;;EAE1D;EACA,MAAMkB,kBAAkB,GAAG,MAAOC,IAAI,IAAK;IACzC,IAAI;MACFC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEF,IAAI,CAAC;MAC5B,MAAMG,QAAQ,GAAG,MAAMpB,KAAK,CAACqB,IAAI,CAAC,gCAAgC,EAAE;QAAEC,KAAK,EAAEL;MAAK,CAAC,CAAC;MACpFF,kBAAkB,CAACK,QAAQ,CAACG,IAAI,CAACC,OAAO,GAAG,yBAAyB,GAAG,qBAAqB,CAAC;IAC/F,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdP,OAAO,CAACO,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CV,kBAAkB,CAAC,qBAAqB,CAAC;IAC3C;EACF,CAAC;EAED,MAAMW,OAAO,GAAG,MAAAA,CAAA,KAAY;IAC1B;IACA,MAAMC,OAAO,GAAG1B,UAAU,CAACI,GAAG,CAAC;IAC/B,MAAMuB,UAAU,GAAG1B,GAAG,CAACyB,OAAO,CAAC;;IAE/B;IACAxB,OAAO,CAACyB,UAAU,CAAC,CAChBC,IAAI,CAAEC,MAAM,IAAK;MAChB,MAAMC,MAAM,GAAGD,MAAM,CAACE,KAAK,CAACC,GAAG,CAAEC,IAAI,IAAK;QACxC;QACAhB,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEe,IAAI,CAAC;QAC3B,OAAO9B,cAAc,CAAC8B,IAAI,CAAC;MAC7B,CAAC,CAAC;;MAEF;MACAC,OAAO,CAACC,GAAG,CAACL,MAAM,CAAC,CAACF,IAAI,CAAEZ,IAAI,IAAK;QACjCC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,IAAI,CAAC;QAC1BN,YAAY,CAACM,IAAI,CAAC;QAClB;QACAD,kBAAkB,CAACC,IAAI,CAAC;MAC1B,CAAC,CAAC;IACJ,CAAC,CAAC,CACDoB,KAAK,CAAEZ,KAAK,IAAK;MAChBP,OAAO,CAACO,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C,CAAC,CAAC;EACN,CAAC;EAED1B,SAAS,CAAC,MAAM;IACd2B,OAAO,CAAC,CAAC;EACX,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEnB,OAAA;IAAA+B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAiBK,CAAC;AAEV;AAAChC,EAAA,CApEQD,aAAa;AAAAkC,EAAA,GAAblC,aAAa;AAsEtB,eAAeA,aAAa;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}